/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formulario;

import dao.AcessorioDao;
import dao.CelularDao;
import dao.ChipDao;
import dao.EmprestimoDao;
import dao.FuncionarioDao;
import dao.ImpressaoDao;
import dao.LogDao;
import dao.UsuarioDao;
import java.awt.Color;

import java.text.SimpleDateFormat;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import javax.swing.JOptionPane;
import modelo.Acessorio;
import modelo.Celular;
import modelo.Chip;
import modelo.Emprestimo;
import modelo.Session;

/**
 *
 * @author Tony
 */
public class FrmEmprestimoDevolucao extends javax.swing.JDialog {

    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    public boolean novo;

    /**
     * Creates new form FrmEmprestimo
     */
    // VARAIVEIS DO FORMULARIO //
    EmprestimoDao emprestimoDao = new EmprestimoDao();
    AcessorioDao acessorioDao = new AcessorioDao();
    FuncionarioDao funcionarioDao = new FuncionarioDao();
    CelularDao celularDao = new CelularDao();
    ChipDao chipDao = new ChipDao();
    UsuarioDao usuarioDao = new UsuarioDao();
    LogDao logDao = new LogDao();

    // lista de acessorias
    List<String> acessorios = new ArrayList<>();

    // VARIAVEIS DE ID ////////////////////////////////////////////////////////
    int emprestimo_id, funcionario_id, celular_id, chip_id, usuario_id;
    String listagemACessorios = "";

    // CONSTRUTO DA CLASSE
    public FrmEmprestimoDevolucao(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        txtDataEmprestimo.setText(hoje());
        txtCodigo.setVisible(false);

    }

    // FUNCÃO DATA HOJE ////////////////////////////////////////////////////////F
    private String hoje() {
        Date data = new Date();
        return sdf.format(data);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupMenu1 = new java.awt.PopupMenu();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtAparelho = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtMarca = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtSerie = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtPatrimonio = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtEmei = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtSetor = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        txtDataEmprestimo = new javax.swing.JFormattedTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtComplementos = new javax.swing.JTextArea();
        jLabel18 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ckCaixa = new javax.swing.JCheckBox();
        ckCarregador = new javax.swing.JCheckBox();
        ckManual = new javax.swing.JCheckBox();
        ckAdaptador = new javax.swing.JCheckBox();
        ckFone = new javax.swing.JCheckBox();
        ckCapinha = new javax.swing.JCheckBox();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtObservacao = new javax.swing.JTextArea();
        btnSalvar = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        txtChip = new javax.swing.JTextField();
        radComChip = new javax.swing.JRadioButton();
        radSemChip = new javax.swing.JRadioButton();
        jLabel17 = new javax.swing.JLabel();
        ckVoz = new javax.swing.JCheckBox();
        ckDados = new javax.swing.JCheckBox();
        txtLinha = new javax.swing.JTextField();
        btnCancelar = new javax.swing.JButton();
        txtCodigo = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        ckFoneD = new javax.swing.JCheckBox();
        ckAdaptadorD = new javax.swing.JCheckBox();
        ckManualD = new javax.swing.JCheckBox();
        ckCarregadorD = new javax.swing.JCheckBox();
        ckCaixaD = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        ckTodos = new javax.swing.JCheckBox();
        ckConfirmaNaoDevolvido = new javax.swing.JCheckBox();
        ckCapinhaD = new javax.swing.JCheckBox();
        cboEstadoBem = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtDataDevolucao = new javax.swing.JFormattedTextField();

        popupMenu1.setLabel("popupMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(222, 231, 248));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitulo.setBackground(new java.awt.Color(102, 0, 0));
        lblTitulo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(255, 255, 255));
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("Devolução de Equipamento");
        lblTitulo.setToolTipText("");
        lblTitulo.setOpaque(true);
        jPanel1.add(lblTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 860, 34));

        jPanel2.setBackground(new java.awt.Color(222, 231, 248));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Dados do Aparelho", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        jLabel1.setText("Aparelho:");

        txtAparelho.setEditable(false);
        txtAparelho.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jLabel2.setText("Marca Modelo:");

        txtMarca.setEditable(false);
        txtMarca.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jLabel5.setText("Série:");

        txtSerie.setEditable(false);
        txtSerie.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jLabel8.setText("Patrimônio:");

        txtPatrimonio.setEditable(false);
        txtPatrimonio.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jLabel9.setText("IMEI:");

        txtEmei.setEditable(false);
        txtEmei.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtAparelho)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPatrimonio, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(txtEmei, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtMarca))
                .addGap(13, 13, 13))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1)
                    .addComponent(txtAparelho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel5)
                    .addComponent(txtSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtPatrimonio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtEmei, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 770, 100));

        jPanel3.setBackground(new java.awt.Color(222, 231, 248));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Dados do Funcionário", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        jLabel6.setText("Nome:");

        txtNome.setEditable(false);
        txtNome.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jLabel7.setText("Setor:");

        txtSetor.setEditable(false);
        txtSetor.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(21, 21, 21)
                .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSetor)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel6)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtSetor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 770, -1));

        jPanel4.setBackground(new java.awt.Color(222, 231, 248));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Dados do Empréstimo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        jLabel12.setText("Data Empréstimo:");

        txtDataEmprestimo.setEditable(false);
        txtDataEmprestimo.setBackground(new java.awt.Color(204, 255, 204));
        try {
            txtDataEmprestimo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        txtComplementos.setEditable(false);
        txtComplementos.setColumns(20);
        txtComplementos.setLineWrap(true);
        txtComplementos.setRows(5);
        jScrollPane2.setViewportView(txtComplementos);

        jLabel18.setText("Complementos:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 51));
        jLabel3.setText("Item Emprestados");

        ckCaixa.setText("Caixa");
        ckCaixa.setEnabled(false);
        ckCaixa.setOpaque(false);

        ckCarregador.setText("Carregador");
        ckCarregador.setEnabled(false);
        ckCarregador.setOpaque(false);

        ckManual.setText("Manual");
        ckManual.setEnabled(false);
        ckManual.setOpaque(false);

        ckAdaptador.setText("Adaptador USB");
        ckAdaptador.setEnabled(false);
        ckAdaptador.setOpaque(false);

        ckFone.setText("Fone de Ouvido");
        ckFone.setEnabled(false);
        ckFone.setOpaque(false);

        ckCapinha.setText("Capinha TPU");
        ckCapinha.setEnabled(false);
        ckCapinha.setOpaque(false);
        ckCapinha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckCapinhaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel18))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(txtDataEmprestimo, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ckFone)
                            .addComponent(ckCaixa))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ckCapinha)
                            .addComponent(ckManual))
                        .addGap(42, 42, 42)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ckCarregador)
                            .addComponent(ckAdaptador)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 628, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckCaixa)
                    .addComponent(txtDataEmprestimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel3)
                    .addComponent(ckManual)
                    .addComponent(ckAdaptador))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckCapinha)
                    .addComponent(ckFone)
                    .addComponent(ckCarregador))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, 770, 130));

        jLabel14.setText("Observação:");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 572, -1, -1));

        txtObservacao.setColumns(20);
        txtObservacao.setLineWrap(true);
        txtObservacao.setRows(5);
        jScrollPane1.setViewportView(txtObservacao);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 590, 770, 50));

        btnSalvar.setBackground(new java.awt.Color(255, 153, 153));
        btnSalvar.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/save.png"))); // NOI18N
        btnSalvar.setText("Confirmar Devolução");
        btnSalvar.setBorder(null);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        jPanel1.add(btnSalvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 650, 264, 40));

        jPanel6.setBackground(new java.awt.Color(222, 231, 248));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Dados do Chip", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        jLabel16.setText(" CHIP:");

        txtChip.setEditable(false);
        txtChip.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        buttonGroup1.add(radComChip);
        radComChip.setForeground(new java.awt.Color(0, 51, 153));
        radComChip.setText("Com Chip");
        radComChip.setEnabled(false);
        radComChip.setOpaque(false);

        buttonGroup1.add(radSemChip);
        radSemChip.setForeground(new java.awt.Color(0, 51, 153));
        radSemChip.setText("Sem chip");
        radSemChip.setEnabled(false);
        radSemChip.setOpaque(false);
        radSemChip.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                radSemChipMouseClicked(evt);
            }
        });

        jLabel17.setText("Nª Linha:");

        ckVoz.setForeground(new java.awt.Color(0, 102, 0));
        ckVoz.setText("Voz");
        ckVoz.setEnabled(false);
        ckVoz.setOpaque(false);

        ckDados.setForeground(new java.awt.Color(0, 102, 0));
        ckDados.setText("Dados");
        ckDados.setEnabled(false);
        ckDados.setOpaque(false);

        txtLinha.setEditable(false);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(radComChip)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radSemChip)
                .addGap(29, 29, 29)
                .addComponent(ckVoz, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ckDados)
                .addGap(41, 41, 41)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtChip, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtLinha, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(radComChip)
                    .addComponent(radSemChip)
                    .addComponent(ckVoz)
                    .addComponent(ckDados)
                    .addComponent(jLabel16)
                    .addComponent(txtChip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(txtLinha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 770, -1));

        btnCancelar.setBackground(new java.awt.Color(204, 204, 204));
        btnCancelar.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/cancel.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setBorder(null);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 650, 110, 30));
        jPanel1.add(txtCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 660, 65, -1));

        jPanel5.setBackground(new java.awt.Color(222, 231, 248));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Dados da Devolução", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ckFoneD.setText("Fone de Ouvido");
        ckFoneD.setOpaque(false);
        jPanel5.add(ckFoneD, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 97, -1, -1));

        ckAdaptadorD.setText("Adaptador USB");
        ckAdaptadorD.setOpaque(false);
        jPanel5.add(ckAdaptadorD, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 74, -1, -1));

        ckManualD.setText("Manual");
        ckManualD.setOpaque(false);
        jPanel5.add(ckManualD, new org.netbeans.lib.awtextra.AbsoluteConstraints(519, 97, -1, -1));

        ckCarregadorD.setText("Carregador");
        ckCarregadorD.setOpaque(false);
        jPanel5.add(ckCarregadorD, new org.netbeans.lib.awtextra.AbsoluteConstraints(519, 74, -1, -1));

        ckCaixaD.setText("Caixa");
        ckCaixaD.setOpaque(false);
        ckCaixaD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ckCaixaDMouseReleased(evt);
            }
        });
        ckCaixaD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckCaixaDActionPerformed(evt);
            }
        });
        jPanel5.add(ckCaixaD, new org.netbeans.lib.awtextra.AbsoluteConstraints(519, 49, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 51, 0));
        jLabel4.setText("Marque os itens devolvidos");
        jPanel5.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 27, -1, -1));

        ckTodos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ckTodos.setText("Devolveu tudo.");
        ckTodos.setOpaque(false);
        ckTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckTodosActionPerformed(evt);
            }
        });
        jPanel5.add(ckTodos, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 30, -1, -1));

        ckConfirmaNaoDevolvido.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ckConfirmaNaoDevolvido.setForeground(new java.awt.Color(0, 51, 153));
        ckConfirmaNaoDevolvido.setText("Faltando item.");
        ckConfirmaNaoDevolvido.setOpaque(false);
        ckConfirmaNaoDevolvido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckConfirmaNaoDevolvidoActionPerformed(evt);
            }
        });
        jPanel5.add(ckConfirmaNaoDevolvido, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 55, 162, -1));

        ckCapinhaD.setText("Capinha TPU");
        ckCapinhaD.setOpaque(false);
        ckCapinhaD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckCapinhaDActionPerformed(evt);
            }
        });
        jPanel5.add(ckCapinhaD, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 50, -1, -1));

        cboEstadoBem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "BOM ESTADO", "DEFEITO", "EXTRAVIADO", "QUEBRADO" }));
        jPanel5.add(cboEstadoBem, new org.netbeans.lib.awtextra.AbsoluteConstraints(107, 80, 230, -1));

        jLabel15.setText("Estado do bem:");
        jPanel5.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 84, -1, -1));

        jLabel13.setText("Data Devolução:");
        jPanel5.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 43, -1, -1));

        txtDataDevolucao.setBackground(new java.awt.Color(255, 204, 204));
        try {
            txtDataDevolucao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel5.add(txtDataDevolucao, new org.netbeans.lib.awtextra.AbsoluteConstraints(107, 40, 108, -1));

        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 440, 770, 130));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 822, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 705, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        // TODO add your handling code here:

        if (Session.getPrevilegio().equals("Consulta")) {
            JOptionPane.showMessageDialog(this, "Usuário se permissão para exclusão.", null, JOptionPane.ERROR_MESSAGE);
            return;
        }

        int resposta;
        String itensNaoDevolvido = "\n\n";

        resposta = JOptionPane.showConfirmDialog(null, "Confirma a DEVOLUÇÃO ?", "", JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {

            if (txtDataEmprestimo.getText().replace("/", "").trim().length() < 8) {
                JOptionPane.showMessageDialog(this, "Date emprestimo inválida.", null, JOptionPane.ERROR_MESSAGE);
                txtDataEmprestimo.requestFocus();
                return;
            }

            if (cboEstadoBem.getSelectedItem().equals("Selecione...")) {
                JOptionPane.showMessageDialog(this, "Informe na estado do bem.", null, JOptionPane.ERROR_MESSAGE);
                cboEstadoBem.setBackground(Color.yellow);
                cboEstadoBem.requestFocus();
                return;
            }

            if ((cboEstadoBem.getSelectedItem().equals("QUEBRADO") || cboEstadoBem.getSelectedItem().equals("DEFEITO") || cboEstadoBem.getSelectedItem().equals("EXTRAVIADO")) && txtObservacao.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Informe na observação, o motivo.", null, JOptionPane.ERROR_MESSAGE);
                txtObservacao.setBackground(Color.yellow);
                txtObservacao.requestFocus();
                return;
            }

            if (!txtAparelho.getText().equalsIgnoreCase("")) {

                if (!ckTodos.isSelected() && !ckConfirmaNaoDevolvido.isSelected()) {
                    JOptionPane.showMessageDialog(this, "Confime se FALTA ITEM ou TODOS DEVOLVIDOS.", null, JOptionPane.ERROR_MESSAGE);
                    return;
                }

                // ITEM DEVOVIDOS E NÃO DEVOLVIDOS
                if (ckCaixa.isSelected() && !ckCaixaD.isSelected()) {
                    itensNaoDevolvido = itensNaoDevolvido + "- Caixa NÃO devolvida.\n";
                }
                if (ckCarregador.isSelected() && !ckCarregadorD.isSelected()) {
                    itensNaoDevolvido = itensNaoDevolvido + "- Carregador NÃO devolvido.\n";
                }
                if (ckManual.isSelected() && !ckManualD.isSelected()) {
                    itensNaoDevolvido = itensNaoDevolvido + "- Manual NÃO devolvido.\n";
                }
                if (ckAdaptador.isSelected() && !ckAdaptadorD.isSelected()) {
                    itensNaoDevolvido = itensNaoDevolvido + "- Adaptador USB NÃO devolvido.\n";
                }
                if (ckFone.isSelected() && !ckFoneD.isSelected()) {
                    itensNaoDevolvido = itensNaoDevolvido + "- Fone de Ouvido NÃO devolvido.\n";
                }
                if (ckCapinha.isSelected() && !ckCapinhaD.isSelected()) {
                    itensNaoDevolvido = itensNaoDevolvido + "- Capa TPU NÃO devolvida.\n";
                }
                if (ckTodos.isSelected()) {
                    itensNaoDevolvido = " OK - Todos acessórios devolvidos.\n";
                }
            }
            // FIM VALIDAÇÃO DOS CAMPOS NECESSARIOS 
            Emprestimo emprestimo = new Emprestimo(Integer.parseInt(txtCodigo.getText()));
            emprestimo.setSituacao("DEVOLVIDO"); // EMPRESTIMO DEVOLVIDO
            emprestimo.setDataDevolucao(txtDataDevolucao.getText());
            Celular celular = new Celular(celular_id);
            celular.setEstadoBem(cboEstadoBem.getSelectedItem().toString());
            celular.setStatus("Disponível"); // CHIP FICA ATIVO
            celular.setObservacao(txtObservacao.getText());

            Chip chip = new Chip(chip_id); // CHIP FICA ATIVO
            chip.setEstadoBem(cboEstadoBem.getSelectedItem().toString());
            chip.setStatus("Disponível");

            String estado = cboEstadoBem.getModel().getSelectedItem().toString();

            itensNaoDevolvido = estado + ". \n" + itensNaoDevolvido.toUpperCase();
            txtObservacao.setText(itensNaoDevolvido);
            emprestimo.setObservacaoDevolucao(itensNaoDevolvido);
            // MUDA OS ITEM DO CELULAR CONFORME DEVOLUÇÃO //////////////////////

            if (ckCaixaD.isSelected()) {

                celular.setCaixa(true);
            } else {
                celular.setCaixa(false);
            }

            if (ckCarregadorD.isSelected()) {

                celular.setCarregador(true);
            } else {
                celular.setCarregador(false);
            }

            if (ckManualD.isSelected()) {

                celular.setManual(true);
            } else {
                celular.setManual(false);
            }

            if (ckAdaptadorD.isSelected()) {

                celular.setAdaptador(true);
            } else {
                celular.setAdaptador(false);
            }

            if (ckFoneD.isSelected()) {

                celular.setFoneOuvido(true);
            } else {
                celular.setFoneOuvido(false);
            }

            if (ckCapinhaD.isSelected()) {

                celular.setCapinha(true);
            } else {
                celular.setCapinha(false);
            }

            // CADATRAO NOVO NO BANCO //////////////////////////////////////////////
            // situacao=?, dataDevolucao=?, observacaoDevolucao = ? where idEmprestimo = ?
            if (emprestimoDao.updateDevolver(emprestimo)) {
                chipDao.updateStatus(chip);
                celularDao.updateStatus(celular);
                celularDao.alterarAcessoriosEmprestadoNoCadastro(celular); // MUDA OS ACESSÁRIOS DO CELULAR NO BANCO.
                JOptionPane.showMessageDialog(this, "Devolvido com Sucesso.", null, JOptionPane.INFORMATION_MESSAGE);
                // REGISTRANDO O LOGO NO BANCO /////////////////////////////////
                logDao.insert("Receber Emprestimo do funcionário: " + emprestimo.getFuncionario().getNome());
                new FrmBarraProgresso(null, true).setVisible(true);
                imprimirTermo();

                this.dispose();
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao cadastrar.", null, JOptionPane.ERROR_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(this, "Devolução Cancelada.", null, JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_btnSalvarActionPerformed
    // IMPRIMIR OS TERMOS /////////////////////////////////////////////////////
    private void imprimirTermo() {
        // SE DEU TUDO CERTO IMPRIMR O TERMO ///////////////////////////////////
        HashMap params = new HashMap<>();
        params.put("acessorios", listagemACessorios);
        params.put("observacao", txtObservacao.getText());
        params.put("recebidoPor", Session.getNome());

        new ImpressaoDao().imprimirTermoDevolucao(emprestimo_id, params);
        params.clear();

    }


    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();

    }//GEN-LAST:event_btnCancelarActionPerformed

    private void radSemChipMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_radSemChipMouseClicked
        // TODO add your handling code here:.
        // TODO add your handling code here:
        if (radSemChip.isSelected()) {
            ckDados.setSelected(false);
            ckVoz.setSelected(false);
            ckDados.setEnabled(false);
            ckVoz.setEnabled(false);
            txtChip.setText("");
            txtLinha.setText("");
        } else {
            ckDados.setSelected(false);
            ckVoz.setSelected(false);
        }
    }//GEN-LAST:event_radSemChipMouseClicked

    private void ckCaixaDMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ckCaixaDMouseReleased
        // TODO add your handling code here:


    }//GEN-LAST:event_ckCaixaDMouseReleased

    private void ckCaixaDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckCaixaDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckCaixaDActionPerformed

    private void ckTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckTodosActionPerformed
        // TODO add your handling code here:
        if (ckTodos.isSelected()) {
            if (ckCaixa.isSelected()) {
                ckCaixaD.setSelected(true);
                ckCaixaD.setEnabled(false);
            } else {
                ckCaixaD.setSelected(false);
                ckCaixaD.setEnabled(false);
            }

            if (ckFone.isSelected()) {
                ckFoneD.setSelected(true);
                ckFoneD.setEnabled(false);
            } else {
                ckFoneD.setSelected(false);
                ckFoneD.setEnabled(false);
            }

            if (ckManual.isSelected()) {
                ckManualD.setSelected(true);
                ckManualD.setEnabled(false);
            } else {
                ckManualD.setSelected(false);
                ckManualD.setEnabled(false);
            }

            if (ckCarregador.isSelected()) {
                ckCarregadorD.setSelected(true);
                ckCarregadorD.setEnabled(false);
            } else {
                ckCarregadorD.setSelected(false);
                ckCarregadorD.setEnabled(false);
            }

            if (ckAdaptador.isSelected()) {
                ckAdaptadorD.setSelected(true);
                ckAdaptadorD.setEnabled(false);
            } else {
                ckAdaptadorD.setSelected(false);
                ckAdaptadorD.setEnabled(false);
            }
            if (ckCapinha.isSelected()) {
                ckCapinhaD.setSelected(true);
                ckCapinhaD.setEnabled(false);
            } else {
                ckCapinhaD.setSelected(false);
                ckCapinhaD.setEnabled(false);
            }

            ckConfirmaNaoDevolvido.setEnabled(false);

        } else {

            ckCaixaD.setSelected(false);
            ckFoneD.setSelected(false);
            ckManualD.setSelected(false);
            ckCarregadorD.setSelected(false);
            ckAdaptadorD.setSelected(false);
            ckCapinhaD.setSelected(false);
            ckConfirmaNaoDevolvido.setEnabled(true);
            ckCapinhaD.setEnabled(true);
            ckCaixaD.setEnabled(true);
            ckFoneD.setEnabled(true);
            ckManualD.setEnabled(true);
            ckCarregadorD.setEnabled(true);
            ckAdaptadorD.setEnabled(true);

        }
    }//GEN-LAST:event_ckTodosActionPerformed

    private void ckConfirmaNaoDevolvidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckConfirmaNaoDevolvidoActionPerformed
        // TODO add your handling code here:
        if (ckConfirmaNaoDevolvido.isSelected()) {
            ckTodos.setEnabled(false);
            ckTodos.setSelected(false);

            if (ckCaixa.isSelected()) {
                ckCaixaD.setSelected(true);

            } else {
                ckCaixaD.setSelected(false);
                ckCaixaD.setEnabled(false);
            }

            if (ckFone.isSelected()) {
                ckFoneD.setSelected(true);
                //ckFoneD.setEnabled(true);
            } else {
                ckFoneD.setSelected(false);
                ckFoneD.setEnabled(false);
            }

            if (ckManual.isSelected()) {
                ckManualD.setSelected(true);
                // ckManualD.setEnabled(true);
            } else {
                ckManualD.setSelected(false);
                ckManualD.setEnabled(false);
            }

            if (ckCarregador.isSelected()) {
                ckCarregadorD.setSelected(true);
                //ckCarregadorD.setEnabled(true);
            } else {
                ckCarregadorD.setSelected(false);
                ckCarregadorD.setEnabled(false);
            }

            if (ckAdaptador.isSelected()) {
                ckAdaptadorD.setSelected(true);
                //ckAdaptadorD.setEnabled(true);
            } else {
                ckAdaptadorD.setSelected(false);
                ckAdaptadorD.setEnabled(false);
            }
            if (ckCapinha.isSelected()) {
                ckCapinhaD.setSelected(true);
                //ckCapinhaD.setEnabled(true);
            } else {
                ckCapinhaD.setSelected(false);
                ckCapinhaD.setEnabled(false);
            }

        } else {

            ckTodos.setEnabled(true);
            ckTodos.setSelected(false);

        }
    }//GEN-LAST:event_ckConfirmaNaoDevolvidoActionPerformed

    private void ckCapinhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckCapinhaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckCapinhaActionPerformed

    private void ckCapinhaDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckCapinhaDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ckCapinhaDActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        if (!novo && emprestimo_id > 0) {

            Emprestimo emp = emprestimoDao.retornaPorID(emprestimo_id);
            ArrayList<Acessorio> lista = acessorioDao.getListagemPorEmprestimo(emprestimo_id);
            // dados do funcionario
            txtCodigo.setText(emp.getIdEmprestimo() + "");
            funcionario_id = emp.getFuncionario().getIdFuncionario();
            txtNome.setText(emp.getFuncionario().getNome());
            txtSetor.setText(emp.getFuncionario().getLocalidade().getNomeLocalidade());

            // dados do aparelho
            try {
                celular_id = emp.getCelular().getIdCelular();
                txtAparelho.setText(emp.getCelular().getMarca().getCategoria().getCategoria());
                txtMarca.setText(emp.getCelular().getMarca().getMarca());
                txtSerie.setText(emp.getCelular().getSerie());
                txtPatrimonio.setText(emp.getCelular().getPatrimonio());
                txtEmei.setText(emp.getCelular().getImei1());

            } catch (Exception e) {

            }
            // dados do chip
            if (emp.getChip().getIdChip() <= 0) {
                radSemChip.setSelected(true);

            } else {

                if (emp.getChip().isIsDado()) {
                    ckDados.setSelected(true);
                } else {
                    ckDados.setSelected(false);
                }
                // telefonia ou voz
                if (emp.getChip().isIsTelefonia()) {
                    ckVoz.setSelected(true);
                } else {
                    ckVoz.setSelected(false);
                }
                chip_id = emp.getChip().getIdChip();
                txtChip.setText(emp.getChip().getCodigoChip());
                txtLinha.setText("");
                txtLinha.setText(emp.getChip().getNumeroLinha());
                radComChip.setSelected(true);
            }

            // DADOS DO EMPRESTIMO
            txtDataEmprestimo.setText("");
            txtDataDevolucao.setText(hoje());
            txtDataEmprestimo.setText(emp.getDataEmprestimo());
            //txtDataDevolucao.setText(emp.getDataDevolucao());
            txtObservacao.setText(emp.getObservacao());
            // PREENCHO OS DADOS DA COMBO DE ACESSORIOS

            txtComplementos.setText("");

            listagemACessorios = "";

            for (Acessorio acessorio : lista) {
                listagemACessorios = listagemACessorios + acessorio.getNomeAcessorio() + ", ";
            }

            if (!listagemACessorios.equalsIgnoreCase("")) {
                listagemACessorios = listagemACessorios.substring(0, listagemACessorios.length() - 2);
                listagemACessorios = listagemACessorios + ".";
            }

            txtComplementos.setText("");
            txtComplementos.setText(listagemACessorios);

            // BUSCAR OS ACESSORIOS EMPRESTADO NO OBJETO CELULAR
            Celular celula = celularDao.getPorID(celular_id);
            // VERIFICA O CADASTRO DOS ITENS
            if (celula != null) {
                if (celula.isCaixa()) {
                    ckCaixa.setSelected(true);
                } else {
                    ckCaixa.setSelected(false);
                }

                if (celula.isCarregador()) {
                    ckCarregador.setSelected(true);
                } else {
                    ckCarregador.setSelected(false);
                }
                if (celula.isManual()) {
                    ckManual.setSelected(true);
                } else {
                    ckManual.setSelected(false);
                }
                if (celula.isAdaptador()) {
                    ckAdaptador.setSelected(true);
                } else {
                    ckAdaptador.setSelected(false);
                }
                if (celula.isFoneOuvido()) {
                    ckFone.setSelected(true);
                } else {
                    ckFone.setSelected(false);
                }
                if (celula.isCapinha()) {
                    ckCapinha.setSelected(true);
                } else {
                    ckCapinha.setSelected(false);
                }
                // FIM - VERIFICA O CADASTRO DOS ITENS
            }

            if (txtAparelho.getText().equalsIgnoreCase("")) {
                ckCaixaD.setEnabled(false);
                ckCarregadorD.setEnabled(false);
                ckManualD.setEnabled(false);
                ckAdaptadorD.setEnabled(false);
                ckFoneD.setEnabled(false);
                ckCapinhaD.setEnabled(false);
                ckTodos.setEnabled(false);
                ckConfirmaNaoDevolvido.setEnabled(false);
            }
        }
    }//GEN-LAST:event_formWindowOpened

    // FUNÇÃO LIMPAR TUDO /////////////////////////////////////////////////////
    private void limparTudo() {
        txtNome.setText("");
        txtSetor.setText("");
        txtAparelho.setText("");
        txtMarca.setText("");
        radComChip.setSelected(false);
        radSemChip.setSelected(false);
        ckVoz.setSelected(false);
        ckDados.setSelected(false);
        txtChip.setText("");
        txtLinha.setText("");
        txtComplementos.setText("");
        txtDataEmprestimo.setText(hoje());
        txtDataDevolucao.setText("");
        cboEstadoBem.setSelectedIndex(0);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmEmprestimoDevolucao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmEmprestimoDevolucao dialog = new FrmEmprestimoDevolucao(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cboEstadoBem;
    private javax.swing.JCheckBox ckAdaptador;
    private javax.swing.JCheckBox ckAdaptadorD;
    private javax.swing.JCheckBox ckCaixa;
    private javax.swing.JCheckBox ckCaixaD;
    private javax.swing.JCheckBox ckCapinha;
    private javax.swing.JCheckBox ckCapinhaD;
    private javax.swing.JCheckBox ckCarregador;
    private javax.swing.JCheckBox ckCarregadorD;
    private javax.swing.JCheckBox ckConfirmaNaoDevolvido;
    private javax.swing.JCheckBox ckDados;
    private javax.swing.JCheckBox ckFone;
    private javax.swing.JCheckBox ckFoneD;
    private javax.swing.JCheckBox ckManual;
    private javax.swing.JCheckBox ckManualD;
    private javax.swing.JCheckBox ckTodos;
    private javax.swing.JCheckBox ckVoz;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblTitulo;
    private java.awt.PopupMenu popupMenu1;
    private javax.swing.JRadioButton radComChip;
    private javax.swing.JRadioButton radSemChip;
    private javax.swing.JTextField txtAparelho;
    private javax.swing.JTextField txtChip;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextArea txtComplementos;
    private javax.swing.JFormattedTextField txtDataDevolucao;
    private javax.swing.JFormattedTextField txtDataEmprestimo;
    private javax.swing.JTextField txtEmei;
    private javax.swing.JTextField txtLinha;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextArea txtObservacao;
    private javax.swing.JTextField txtPatrimonio;
    private javax.swing.JTextField txtSerie;
    private javax.swing.JTextField txtSetor;
    // End of variables declaration//GEN-END:variables
}
